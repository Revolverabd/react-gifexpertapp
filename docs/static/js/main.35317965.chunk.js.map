{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","console","log","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SATU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKC,UAAY,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCLHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDZ,SAACA,GAAc,IAAD,EAEbrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAqBvC,OAdAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GAGEH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAI1B,CAACb,IAGGc,EDhBsBK,CAAcnB,GAAhCU,EAJ0B,EAI/BJ,KAAYO,EAJmB,EAInBA,QAKlB,OAFDO,QAAQC,IAAIR,GAGP,oCACI,wBAAIjB,UAAU,qCAAqCI,GAClDa,GAAW,uBAAGjB,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aACVc,EAAOF,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIa,IAAKb,EAAIhB,IACLgB,UEjBfc,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,6BACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQS,EAAWqB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACAsB,IAAOtB,EACPA,SAAYA,W,MCdxCwB,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.35317965.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputValue = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const hanleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={hanleSubmit}>\n            <input\n                type=\"Text\"\n                value={inputValue}\n                onChange={handleInputValue}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className = \"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","\n//FUNCIÓN QUE HACE LA PETICIÓN Y RETORNA UN OBJETO CON LA DATA\nexport const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=wRDQxMPnF7uqPbYnFKoWAOFuSFwfD4IR`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n import { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifts } from '../hooks/useFetchGifts';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n\n   const {data:images,loading} = useFetchGifts(category);\n \n   \n   console.log(loading);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            <div className=\"card-grid\">\n                {images.map(img => (\n                    <GifGridItem\n                        key={img.id}\n                        {...img}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n//CUSTOM HOOK PARA OBTENER LA DATA Y CONTROLAR EL ESTATO DE MI COMPONENTE\nexport const useFetchGifts = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                // setTimeout(() => {\n                //     console.log(imgs)\n                    setstate({\n                        data: imgs,\n                        loading: false\n                    })\n                // }, 3000)\n            });\n    }, [category])\n\n\n    return state;\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <div>\n            <>\n                <h2>GifExpertApp</h2>\n                <AddCategory setCategories={setCategories} />\n                <hr />\n\n                <ol>\n                    {\n                        categories.map(category => (\n                            <GifGrid \n                            key = {category}\n                            category = {category} \n                            />\n                        ))\n                    }\n                </ol>\n            </>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}